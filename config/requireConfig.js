window.requireConfig = {
	baseUrl: window.requireRoot || './',
	paths: {
		// libraries
		text: 'lib/js/text',
		extend: 'lib/js/extend',
		jquery: 'lib/js/jquery-3.1.0',
		jqueryUi: 'lib/js/jquery-ui-1.11.4',
		jqueryFileupload: 'lib/js/jquery.fileupload',
		jqueryIframeTransport: 'lib/js/jquery.iframe-transport',
		underscore: 'lib/js/underscore',
		// urushi core objects.
		addInputEventListener: 'urushi/base/addInputEventListener',
		animation: 'urushi/base/animation',
		browser: 'urushi/base/browser',
		Deferred: 'urushi/base/Deferred',
		event: 'urushi/base/event',
		legacy: 'urushi/base/legacy',
		node: 'urushi/base/node',
		Promise: 'urushi/base/Promise',
		removeInputEventListener: 'urushi/base/removeInputEventListener',
		templateEngine: 'urushi/base/templateEngine',
		Urushi: 'urushi/Urushi',
		util: 'urushi/base/util',
		xhr: 'urushi/base/xhr',
		// urushi classes.
		templateConfig: 'urushi/material/js/templateConfig',
		materialConfig: 'urushi/material/js/materialConfig',
		_Base: 'urushi/material/js/_Base',
		_collectionMixin: 'urushi/material/js/_collectionMixin',
		_CollectionWidgetBase: 'urushi/material/js/_CollectionWidgetBase',
		_CollectionItemBase: 'urushi/material/js/_CollectionItemBase',
		Button: 'urushi/material/js/Button',
		Checkbox: 'urushi/material/js/Checkbox',
		ContextMenu: 'urushi/material/js/ContextMenu',
		_ContextMenuItem: 'urushi/material/js/_ContextMenuItem',
		Dialog: 'urushi/material/js/Dialog',
		DropDown: 'urushi/material/js/DropDown',
		Hamburger: 'urushi/material/js/Hamburger',
		Input: 'urushi/material/js/Input',
		Panel: 'urushi/material/js/Panel',
		Radiobox: 'urushi/material/js/Radiobox',
		Ripple: 'urushi/material/js/Ripple',
		Textarea: 'urushi/material/js/Textarea',
		Toast: 'urushi/material/js/Toast',
		ToastManager: 'urushi/material/js/ToastManager',
		ToggleButton: 'urushi/material/js/ToggleButton',
		Tooltip: 'urushi/material/js/Tooltip',
		// urushi module templates.
		buttonTemplate: 'urushi/material/template/button.html',
		checkboxTemplate: 'urushi/material/template/checkbox.html',
		checkboxTransitionUnitTemplate: 'urushi/material/template/checkbox-transition-unit.html',
		checkboxRippleTransitionUnitTemplate: 'urushi/material/template/checkbox-ripple-transition-unit.html',
		contextMenuTemplate: 'urushi/material/template/context-menu.html',
		dialogTemplate: 'urushi/material/template/dialog.html',
		dropDownTemplate: 'urushi/material/template/drop-down.html',
		hamburgerTemplate: 'urushi/material/template/hamburger.html',
		inputTemplate: 'urushi/material/template/input.html',
		inputTransitionUnitTemplate: 'urushi/material/template/input-transition-unit.html',
		panelTemplate: 'urushi/material/template/panel.html',
		radioboxTemplate: 'urushi/material/template/radiobox.html',
		textareaTemplate: 'urushi/material/template/textarea.html',
		toastTemplate: 'urushi/material/template/toast.html',
		toastManagerTemplate: 'urushi/material/template/toast-manager.html',
		toggleButtonTemplate: 'urushi/material/template/toggle-button.html',
		toggleButtonTransitionUnitTemplate: 'urushi/material/template/toggle-button-transition-unit.html',
		tooltipTemplate: 'urushi/material/template/tooltip.html',
		// beta.
		FileInput: 'urushi/beta/js/FileInput',
		fileInputTemplate: 'urushi/beta/template/fileInput.html',
		Grid: 'urushi/beta/js/Grid',
		gridTemplate: 'urushi/beta/template/grid.html',
		GridModel: 'urushi/beta/js/GridModel',
		_GridPagination: 'urushi/beta/js/_GridPagination',
		gridPaginationTemplate: 'urushi/beta/template/gridPagination.html',
		_GridOption: 'urushi/beta/js/_GridOption',
		_GridOptionConfig: 'urushi/beta/js/_GridOptionConfig',
		_GridColumnItem: 'urushi/beta/js/_GridColumnItem',
		UploadManager: 'urushi/beta/js/UploadManager',
		uploadManagerTemplate: 'urushi/beta/template/uploadManager.html',
		_UploadManagerListItem: 'urushi/beta/js/_UploadManagerListItem',
		uploadManagerListItemTemplate: 'urushi/beta/template/uploadManagerListItem.html',
	},
	shim: {
		'jqueryUi': ['jquery']
	},
	// Counterplan for browser cache.
	urlArgs: 'bust=' + (new Date()).getTime()
};
